{
	"name": "M5 From Data Lake To Database",
	"properties": {
		"activities": [
			{
				"name": "Get Metadata",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "GetMetaDataFromDataLake",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "Truncate Script",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Get Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "TRUNCATE TABLE stg.movies_metadata\nTRUNCATE TABLE stg.ratings\nTRUNCATE TABLE stg.credits"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "spPopulateMovieStatus",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy Ratings",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spPopulateMovieStatus]"
				},
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "spPopulateMovies",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "spPopulateMovieStatus",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spPopulateMovies]"
				},
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "spPopulateCompany",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "spPopulateMovies",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spPopulateCompany]"
				},
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "spPopulateGenre",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "spPopulateCompany",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spPopulateGenre]"
				},
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "spPopulateCast",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "spPopulateGenre",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spPopulateCast]"
				},
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "spPopulateMoviesCompanyMap",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "spPopulateCast",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spPopulateMoviesCompanyMap]"
				},
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "spPopulatetRatings",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "spPopulateMoviesCompanyMap",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spPopulatetRatings]"
				},
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "spPopulateMoviesGenreMap",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "spPopulatetRatings",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spPopulateMoviesGenreMap]"
				},
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "spPopulateMoviesCastMap",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "spPopulateMoviesGenreMap",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spPopulateMoviesCastMap]"
				},
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Copy Credits",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Truncate Script",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"additionalColumns": [
							{
								"name": "pipelineId",
								"value": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							},
							{
								"name": "source_filename",
								"value": "$$FILEPATH"
							}
						],
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": false,
							"wildcardFolderPath": "movies",
							"wildcardFileName": "credits*.csv",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DataLake",
						"type": "DatasetReference",
						"parameters": {
							"FileName": "credits*.csv"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "AzureDB",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "credits"
						}
					}
				]
			},
			{
				"name": "Copy Movies",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy Credits",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"additionalColumns": [
							{
								"name": "pipelineId",
								"value": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							},
							{
								"name": "source_filename",
								"value": "$$FILEPATH"
							}
						],
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": false,
							"wildcardFolderPath": "movies",
							"wildcardFileName": "movies*.csv",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DataLake",
						"type": "DatasetReference",
						"parameters": {
							"FileName": "movies*.csv"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "AzureDB",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "movies_metadata"
						}
					}
				]
			},
			{
				"name": "Copy Ratings",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy Movies",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"additionalColumns": [
							{
								"name": "pipelineId",
								"value": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							},
							{
								"name": "source_filename",
								"value": "$$FILEPATH"
							}
						],
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": false,
							"wildcardFolderPath": "movies",
							"wildcardFileName": "ratings*.csv",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DataLake",
						"type": "DatasetReference",
						"parameters": {
							"FileName": "ratings*.csv"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "AzureDB",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "ratings"
						}
					}
				]
			}
		],
		"annotations": [],
		"lastPublishTime": "2023-06-10T07:08:54Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}